@page "/example2/{CurrentPage:int}"
@using BlazorExample.Common

@inject IUserService service
@inject IJSRuntime jsRuntime
@inject NavigationManager navi

<PageTitle>Example2</PageTitle>

<h3>Example2</h3>

@if(pager == null)
{
	<p>Loading...</p>
}
else
{
	<table class="table">
		<thead>
			<tr>
				<th>Id</th>
				<th>Name</th>
				<th>Sex</th>
				<th>Active</th>
				<th>Action</th>
			</tr>
		</thead>
		<tbody>
			@foreach(var item in pager.Values)
			{
				<tr>
					<td>@item.Id</td>
					<td>@item.Name</td>
					<td>@item.UserSex</td>
					<td><input type="checkbox" value="@item.IsActive" checked="@item.IsActive" onclick="return false;" /></td>
					<td>
						<input type="button" class="btn btn-primary" value="수정" onclick="@(() => navi.NavigateTo($"/example3/{item.Id}"))"/>
						<input type="button" class="btn btn-warning" value="삭제" onclick="@(() => DeleteUser(item.Id))"/>
					</td>
				</tr>
			}
		</tbody>
	</table>
	<div class="d-flex justify-content-center">
		<nav aria-label="Page navigation example">
		  <ul class="pagination">
			@for (int i = pager.StartPage; i <= pager.EndPage; i++)
			{
				var page = i;
				@if (page == CurrentPage)
				{
					<li class="page-item active"><a class="page-link" @onclick="(() => ShowPage(page))">@i</a></li>
				}
				else
				{
					<li class="page-item"><a class="page-link" @onclick="(() => ShowPage(page))">@i</a></li>
				}
			}
		  </ul>
		</nav>
	</div>

	<input class="btn btn-success" type="button" value="뒤로가기" onclick="@(() => navi.NavigateTo("/example1"))" />
}


@code {
	[Parameter]
	public int CurrentPage { get; set; } = 1;

	Pager<User> pager;

	protected override async Task OnInitializedAsync()
	{
		pager = await service.GetAllUsers(CurrentPage);
	}

	private async Task ShowPage(int currentPage)
	{
		navi.NavigateTo($"/example2/{currentPage}", forceLoad: true);
	}

	private async Task DeleteUser(long id)
	{
		await service.DeleteUser(id);
		navi.NavigateTo($"/example2/{CurrentPage}", forceLoad: true);
	}
}
