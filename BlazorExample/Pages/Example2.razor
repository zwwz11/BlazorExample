@page "/example2"
@using BlazorExample.Common

@inject IUserService service
@inject IJSRuntime jsRuntime
@inject NavigationManager navi

<PageTitle>Example2</PageTitle>

<h3>Example2</h3>

@if(users == null)
{
	<p>Loading...</p>
}
else
{
	<table class="table">
		<thead>
			<tr>
				<th>Id</th>
				<th>Name</th>
				<th>Sex</th>
				<th>Active</th>
				<th>Action</th>
			</tr>
		</thead>
		<tbody>
			@foreach(var item in users)
			{
				<tr>
					<td>@item.Id</td>
					<td>@item.Name</td>
					<td>@item.UserSex</td>
					<td><input type="checkbox" value="@item.IsActive" checked="@item.IsActive" onclick="return false;" /></td>
					<td>
						<input type="button" class="btn btn-primary" value="수정" onclick="@(() => navi.NavigateTo($"/example3/{item.Id}"))"/>
						<input type="button" class="btn btn-warning" value="삭제" onclick="@(() => DeleteUser(item.Id))"/>
					</td>
				</tr>
			}
		</tbody>
	</table>
	<div>
		<input type="button" class="btn-lg btn" id="prev" value="Previous" @onclick="PrevPage" />
		@for (int i = Page - 2; i <= Page + 2; i++)
		{
			int j = i;
			@if (i > 0)
			{
				if (i == Page)
				{
					<span class="px-2" style="font-weight:bold; cursor:pointer" @onclick="(() => ShowPage(j))">@i</span>
				}
				else
				{
					<span class="px-2" style="cursor:pointer" @onclick="(() => ShowPage(j))">@i</span>
				}
			}
		}
		<input type="button" class="btn-lg btn" id="next" value="Next" @onclick="NextPage" />
	</div>

	<input class="btn btn-success" type="button" value="뒤로가기" onclick="@(() => navi.NavigateTo("/example1"))" />
}


@code {
	[Parameter]
	public int Page { get; set; }

	IEnumerable<User> users;

	protected override async Task OnInitializedAsync()
	{
		users = await service.GetAllUsers();
	}

	private void NextPage()
	{
		Page++;
		ShowPage();
	}

	private void PrevPage()
	{
		if (Page > 1)
		{
			Page--;
			ShowPage();
		}
	}

	private void ShowPage()
	{
		navi.NavigateTo($"/example2", forceLoad: true);
	}

	private void ShowPage(int i)
	{
		Page = i;
		ShowPage();
	}

	private async Task DeleteUser(long id)
	{
		await service.DeleteUser(id);
		navi.NavigateTo($"/example2", forceLoad: true);
	}
}
